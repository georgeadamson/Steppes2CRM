<%

	# This code renders one CLIENT ROW on a trip summary page *OR* a template row for use by client-side script to add rows.

	# This partial expects arguments:
	trip_client			||= TripClient.new			# REQUIRED when editing existing records.
	index						||= 0										# REQUIRED sequential number when editing existing records.
	trip						||= trip_client.trip		# Optional when editing existing records because we can derive it from trip_client.
	client					||= trip_client.client	# Optional when editing existing records because we can derive it from trip_client.
	html_template		||= false
	
	# Allow for when new (unsaved) trip has trip.clients but no trip.trip_clients collection:
	trip_client.client ||= client
	
	# Include the little menu of trip letters next to the client name: (unless we're creating a template row)
	show_trip_letters_menu = !html_template

	# Flag to tell us whether the trip is being viewed in the context of a specific client:
	# We use this to hide the 'remove' option to prevent the current client from being removed from his own trip!
	client_is_open_in_ui = ( trip_client.client_id == params[:client_id].to_i )
	
	# Flag used later to disable the 'remove' checkbox:
	client_not_removable = trip_client.is_primary || client_is_open_in_ui || html_template
	
	# If we're generating client-side template html then render {placeholders} where IDs etc would be:
	# See initTripClientSearch() in the shared.js
	if html_template

		index						= '{index}'
		client_id				= '{id}'
		client_name			= '{name}'
		client_label		= '{label}'

	else

		client_id				||= trip_client.client_id
		client_name			||= ( client && client.shortname ) || 'No name'
		client_label		||= ( client && client.shortname ) || 'No name'

	end


	# Decide which tooltip to show on this row: (The order of these conditions is significant)
	tooltip = case 
		when html_template
			then 'Client added but not saved yet!'
		when client && client_is_open_in_ui
			then "You are working on a trip for #{ client.shortname } so you won't be able to remove them!"
		when client && trip_client.is_primary
			then "You won't be able to remove #{ client.shortname } while they are a primary contact."
		else
			''
	end

	
		
	# Define and serialise parameters for generating client letter documents:
	# Note: Because we are explicitly specifying document_template_file it will not need to be derived from document_type_id.
	# Note: Letter templates are always in the /Templates/Letters subfolder.
	# Eg: document[document_type_id]=8&document[client_id]=#{ client.id }&document[user_id]=#{ session.user.id }&document[generate_doc_after_create]=true&document[generate_doc_later]=true&document[document_template_file]=Letters/{value}&_method=post
	if client && show_trip_letters_menu
		
		letter_builder_parameters = {
			
			'document[trip_id]'										=> trip.id,
			'document[user_id]'										=> trip.user_id,
			'document[client_id]'									=> client.id,
			'document[document_type_id]'					=> DocumentType::LETTER,				# 8 = Letter template
			'document[document_template_file]'		=> 'Letters/{value}',
			'document[generate_doc_after_create]'	=> true,
			'document[generate_doc_later]'				=> true,
			:redirect_to													=> resource(client,trip)
			
		}.to_a.map{|pair| pair.map{ |part| h(part.to_s) }.join('=') }.join('&')	# WARNING: Do not be tempted to let merb serialise the hash for us because it will encode characters unecessarly!

		# Cache list of letter templates (filtered by company) so we don't keep rebuilding it for each client:
		@template_filenames	  ||= Document.doc_builder_letter_templates( :type => :trip, :prefix => ( trip.company || session.user.company ).initials )

		# Skip the letter-generation menu on a new trip or when there are no letter templates:
		show_trip_letters_menu	= false if trip.new? || @template_filenames.empty?
		
	end


	# The email content is now generated by a partial: "/clients/_traveller_summary.html.erb"
	#	# Helper for building a mailto link containing client details:
	#	def prepare_email_details_for(client, new_line = '%0A')
	#		[
	#			"#{new_line}Details of client:#{new_line}",
	#			client.fullname,
	#			"DOB: #{ client.birth_date.formatted(:uidisplay) }",
	#			"Age: #{ client.age }",
	#			"Name on passport: #{ client.passport_name }",
	#			"Passport expires: #{ client.passport_expiry_date.formatted(:uidisplay) }",
	#			"Passport issue date: #{ client.passport_issue_date.formatted(:uidisplay) }",
	#			"Passport number: #{ client.passport_number }",
	#			"Airline number: #{ client.notes_frequent_flyer }",
	#			"Airline preference: #{ client.notes_airline }",
	#			"Seat preference: #{ client.notes_airline }",
	#			"Meal preference: #{ client.notes_food }",
	#			"General preference: #{ client.notes_general }",
	#			"Nationality: #{ client.nationality }",
	#			"Occupation: #{ client.occupation }"
	#		]
	#	end

-%>

	<tr title="<%= tooltip %>">

		<%= fields_for trip_client do %>

			<td>
				<div><%# << This div only exists to improve the animation when clients are added. 
						 %>

					<span class="ui-icon ui-icon-client"></span>

					<%=
						# No need to make client name a clickable link when it's the currently open client:
						if client_is_open_in_ui
							client_label
						else
							link_to client_name, "/clients/#{ client_id }/?label=#{ client_label }", :class => 'show clientName'
						end
					%>

					<!-- client_id is only used when adding clients and to prevent duplication: -->
					<%= hidden_field :name => "trip[trip_clients_attributes][#{ index }][client_id]",	:value => client_id %>

					<!-- trip_client.id field is only needed when updating a trip: -->
					<%=
						unless trip.new? || html_template
							hidden_field :name => "trip[trip_clients_attributes][#{ index }][id]",				:value => trip_client.id
						end
					%>

				</div>
			</td>
			<td><%= orig_select :name => 'generate_letter', :collection => @template_filenames, :prompt => 'Create a trip letter...', :class => 'create-letter arrow-only', :'data-method' => 'post', :'data-href' => "#{ resource( client, :documents ) }?#{ letter_builder_parameters }", 'data-target' => '#no-target' if client && show_trip_letters_menu %></td>
			
			<td title="Create email with client details">
				<%= if client
			
						email = {
							:subject	=> 'Client details',
							:body			=> partial('clients/traveller_summary', :client => client)	# <-- Separate each item with a mailto-friendly line feed.
						}

						link_to icon(:'mail-closed'), "mailto:&#{ email.to_params }"

					end
				%>
			</td>
			<!--<td>
				<%#= orig_radio_button	:name => "selected_client", :checked => (index==0) if client_id && trip.tour_template? %>
				
				<%#= link_to icon(:add), resource( client, :trips, :new, :copy_trip_id => trip.id ) if client && trip.tour_template? %>
			</td>-->
			<% if trip.tour_template? %>
				<td><%= orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][is_flight_with_us]",		:checked => trip_client.is_flight_with_us,:boolean => true %></td>
			<% end %>
			<td><%= orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][is_single]",						:checked => trip_client.is_single,				:boolean => true %></td>
			<td><%= orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][is_primary]",						:checked => trip_client.is_primary,				:boolean => true %></td>
			<td><%= orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][is_invoicable]",				:checked => trip_client.is_invoicable,		:boolean => true %></td>
			<td><%= orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][confirmation_status]",	:checked => trip_client.is_confirmed,			:disabled => true, :readonly => true unless html_template %></td><!-- Disabled because this field is for info only and never needs to be submitted -->
			<td><%= 
					unless html_template	# Checkbox for Remove:
						orig_check_box	:name => "trip[trip_clients_attributes][#{ index }][_delete]",								:checked => false, :disabled => client_not_removable, :readonly => client_not_removable
					end
				%>
			</td>

		<% end =%>

	</tr>