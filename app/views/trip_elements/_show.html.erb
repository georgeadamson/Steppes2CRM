<%

# Render a SINGLE TRIP ELEMENT on the TripBuilder timeline.
# Called by trip_elements/_timeline_elements.html.erb partial

element			||= @element
selected		||= @selected
isOverview	||= @isOverview || false						# Depricated
trip					= element.trip

# Build css class names for this trip element:
cssClasses = [
	'timelineElement',
	'tripElement',
	"day#{ element.day }",
	"days#{ element.days }",
	( "stack#{ element.overlap_index + 1 }" unless element.overlap_index == 0 ),
	"is#{ element.element_type.code.capitalize }",	# Eg: isFlight isGround isAccomm isMisc
	element.is_subgroup ? 'is_subgroup' : 'allTravellers',
	trip.adults   > 0 ? 'hasAdults'   : 'noAdults',
	trip.children > 0 ? 'hasChildren' : 'noChildren',
	trip.infants  > 0 ? 'hasInfants'  : 'noInfants',
	trip.singles  > 0 ? 'hasSingles'  : 'noSingles',
	#"trip_element[id]=#{ element.id }",	# Depricated?
	selected ? 'selected' : '',
	element.is_slave?   ? 'slave'   : ''
]

# Build informative tooltip for this trip element:
elementTitle = element.days.to_s + 
" #{ element.is_accomm? ? 'nights' : 'days' }"  +
": #{ element.element_type && element.element_type.name }" +
" - #{ element.supplier && element.supplier.name }" +
" #{ element.name } #{ element.description }"


# Element tooltip:
if element.is_flight?
	elementTitle << " (Departs #{ element.depart_airport.display_name } #{ element.start_date.formatted(:uidatetime) } -" +
	" Arrives #{  element.arrive_airport.display_name } #{ element.end_date.formatted(:uidatetime)   })"
else
	elementTitle << " #{ element.dateSummary }"
end

# Element label:
# Important: Beware of setting element_label equal to element.flight_code directly because it actually becomes a reference to the property, not just the value of it!
if element.is_flight? && ( !element.flight_code.blank? || ( element.supplier && !element.supplier.code.blank? ) )
	element_label = "#{ element.flight_code.blank? ? element.supplier.code : element.flight_code }"
	element_label << " (#{ element.depart_airport.code_or_name } - #{  element.arrive_airport.code_or_name })" if element.depart_airport && element.arrive_airport
else
	element_label = element.display_name
end


elementUrl = nested_resource(element)


# If element is within the overview then customize it with percentage width and x-coordinate:
customSize = "width:#{ element.percentOfTrip.to_s }%;left:#{ element.percentThroughTrip.to_s }%;" if isOverview


-%>
<%= fields_for element do %>

	<li class="<%= cssClasses.join(" ") %>" title="<%= elementTitle %>" style="<%= customSize %>" data-ajax-url="<%= elementUrl %>">

		<%= hidden_field :id -%>

		<% unless isOverview -%>

			<h4>
				<%= link_to element_label,
					nested_resource( element, :edit ),
					:class	=> 'ajax',
					:rel		=> '.tripElementFormContainer'	# IMPORTANT: rel attribute defines html target where form will be loaded!
				-%>
			</h4>

			<%= if element.is_master? && ( slave_count = element.slave_elements.count ) > 0

				icon :attention, :text => '!', :class => 'master',
				     :title => "#{ slave_count } elements are linked to this template element in client copies."
				
			elsif element.is_slave? && element.master_element
			
				icon :attention, :text => icon(:locked), :class => 'slave',
				     :title => 'This element is controlled by the Group Trip Template so you won&apos;t be able to modify it here.'
				
			elsif element.is_slave? && !element.master_element
			
				icon :alert, :class => 'slave',
				     :title => "This element was controlled by the Group Trip Template but the original element no longer exists."
			
			end -%>

		<% end -%>
	</li>

<% end =%>